module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,           // USB->Serial output
    
    input pdm_data_in[8],
    output pdm_clock_out[8],
    
    output fx3_dq[32],
    output fx3_pclk,
    output fx3_slcs_,
    output fx3_slwr_,
    output fx3_sloe_,
    output fx3_slrd_,
    output fx3_pktend_,
    input fx3_flaga,
    input fx3_flagb,
    input fx3_flagc,
    input fx3_flagd,
    output fx3_a[2]
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    reset_conditioner reset_cond;    
     
    dff sample_counter[8];
    dff sample[8];
    dff booting;
    dff cycle[8];
    dff mic_clock;
    
    dff bootcounter[32];
    
  }
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset

    usb_tx = usb_rx;         // connect tx output
    
    pdm_clock_out = 8x{mic_clock.q};
    
    if (booting.q==0)
    {
      fx3_dq = 0;
      fx3_a = 2b00;
      fx3_slcs_ = 0; 
      fx3_slrd_ = 0;
      fx3_sloe_  = 0;
      fx3_pclk = 0;
      fx3_pktend_ = 0;
      fx3_slwr_ = 0;
      
      bootcounter.d = bootcounter.q + 1;
      
      if (bootcounter.q == 400000000)
        booting.d = 1;
    }
    else
    {
      fx3_a = 2b00; // fifo address
      fx3_slcs_ = 0; // enable the chip
      fx3_slrd_ = 1; // slave should not write, we are not reading
      fx3_sloe_  = 1; // slave should not write, we are not reading
      fx3_pclk = clk;
      fx3_pktend_ = 1; // not doing partials
      
      cycle.d = cycle.q +1;

      if (cycle.q == 15)
        mic_clock.d = 0;
              
      if (cycle.q == 29)
        sample.d = pdm_data_in;

      fx3_slwr_ = 1;
      if (cycle.q == 30)
        fx3_slwr_ = 0; // write if we have a new sample, should be checking flags
      
      if (cycle.q == 31)
      {
        mic_clock.d = 1;
        cycle.d = 0;
        sample_counter.d = sample_counter.q+1;
      }
      
      fx3_dq = c{cycle.q, sample_counter.q, 8x{0}, sample.q}; 
    }
    
    led = 8x{booting.q};           // output the data
  }
}